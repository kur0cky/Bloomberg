{
    "collab_server" : "",
    "contents" : "# load packages\nlibrary(glmnet)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(xts)\nlibrary(MASS)\nlibrary(foreach)\nlibrary(GGally)\n\n#データの整理と概観----\n\n##資産価格データ----\n#NAの入ってないcsvを用意する\nasset.tmp <- read.csv(\"data/assets.csv\")\nasset.tmp[1:5,1:5]\n\nasset.tmp2 <- data.frame(apply(\n  asset.tmp[,-1] ,\n  2,\n  function(x) diff(log(x))\n))\nrownames(asset.tmp2) <- asset.tmp$Date[-1]\nasset.tmp2[1:5,1:5]\n\nasset <- data.frame(Date = rownames(asset.tmp2) %>% as.Date(),\n                    asset.tmp2)\nasset[1:5,1:5]\nrm(asset.tmp)\nrm(asset.tmp2)\n\n##ファクターデータ----\n#NAの入っていない、正規化したデータを用意する\nfactor.tmp <- read.csv(\"data/factors.csv\")\nhead(factor.tmp)\n\nfactor.tmp2 <- data.frame(factor.tmp[,-c(1,2)])\nrownames(factor.tmp2) <- factor.tmp[,2]\nhead(factor.tmp2)\nplot(ts(factor.tmp2))\n\nfactor <- data.frame(Date = as.Date(rownames(factor.tmp2)),\n                     factor.tmp2)\nfactor[1:5,1:5]\nGGally::ggpairs(factor[,-1])\n\n#0.4を弱い相関と言っていいのかわからない。\n#アヒル本のggplotを参考にする。\nrm(factor.tmp)\nrm(factor.tmp2)\n\n##資産とファクターの結合----\nd <- inner_join(factor, asset, by=\"Date\")\nd[1:5,1:10]\ndim(d)\n\n##月ごとのリストに分ける\nd$year <- d$Date %>% year()\nd$month <- d$Date %>% month()\n\ndfs <- split(d, list(d$month, d$year))\n#dataframesの略\nlength(dfs)\n\nfor(i in 1:length(dfs)){\n  print(dim(dfs[[i]]))\n}\nrm(i)\n\nfor(i in length(dfs):1) {\n  if(dim(dfs[[i]])[1] == 0) dfs[[i]] <- NULL\n}\nrm(i)\n\nfor(i in 1:length(dfs)){\n  print(dim(dfs[[i]]))\n}\nrm(i)\nlength(dfs)\n#29カ月分のデータ\n\n#ファクターモデルの推定----\n\n#result.lasso <- for(i in 1:(length(dfs)-3)){\n#  train <- rbind(dfs[[i]], dfs[[i+1]], dfs[[i+2]])\n#  result.lasso[[i]] <- foreach(j = 2:ncol(d), .combine = rbind) %do% {\n#    cv.glmnet(x = as.matrix(train[,1951:1955]), \n#              y = as.matrix(train[,j]),\n#              standardize=TRUE) %>% #訓練の三ヶ月間の中で自動的に正規化してくれる\n#      coef(s=\"lambda.min\") %>% \n#      .[,1]\n#  }\n#}\n\nresult.lasso <- readRDS(\"data/result_lasso.RDS\")\nlength(result.lasso)\ndim(result.lasso[[1]])\n\n# NOTE ------------------------------------------------------------------\n# asset : 収益率と日付のデータ\nasset[1:5,1:5]\n# factor : 各Factorの収益率と日付のデータ\n# ggpairsで相関係数も出せる\nfactor[1:5,1:5]\nGGally::ggpairs(factor[,-1])\n# d : assetとfactorを日付列でmergeしたもの\n# 562 days\nd[1:5,1:10]\ndim(d)\n# dfs : dを月ごとに分けたもの\n# 29ヶ月分ある（from 2015-01 to 2017-05）\ndfs[[1]][1:10,1:7]\nlength(dfs)\n# result.lasso : 各資産に関して、factor modelのbeta値（各月）\n# 3ヶ月分を用いて推定してるため、dfsのはじめ3ヶ月分は推定のみに使われる\n# そのため26ヶ月分ある（from 2015-04 to 2017-05）\nresult.lasso[[1]][1:5,]\nlength(result.lasso)\n# ------------------------------------------------------------------------\n\n#バックテスト(top30)----\ntop30.names.list <- list()\n\nfor(i in 1:length(result.lasso)) {\ntop30.names.list[[i]] <- matrix(ncol=ncol(result.lasso[[1]]), nrow=30)  \n  for(j in 1:ncol(result.lasso[[1]])) {\n    top30.names.list[[i]][,j] <- result.lasso[[i]][,j] %>% \n      sort(decreasing = T) %>% \n      head(n=30) %>% \n      names() %>% as.vector()\n  }\n}\nrm(i)\nrm(j)\ntop30.test.df <- matrix(nrow=length(result.lasso), ncol=ncol(result.lasso[[1]]))\n\nfor(i in 1:length(result.lasso)){\n  for(j in 1:ncol((result.lasso[[1]]))) {\n    top30.test.df[i,j] <- dfs[[i+3]][,top30.names.list[[i]][,j]] %>% \n      apply(2, function(x) exp(sum(x))) %>% mean()\n  }\n}\nrm(i)\nrm(j)\ncolnames(top30.test.df) <- colnames(result.lasso[[1]])\ntop30.test.df %>%\n  apply(2,cumprod) %>%\n#　累積リターンにするならコメントはずす\n    ts.plot(col=1:6)\nlegend(\"topleft\",c(\"Alpha\", \"TOPIX\", \"VIX\", \"value\", \"size\", \"JPY_USD\"),\n       col=1:6,\n       lwd=2, cex=0.7)\n\n\n#リスク・プレミアム----\n\n\nriskPremium <- foreach(i = 1:26, .combine = rbind) %do% {\n  replicate <- diag(5) %*% ginv(as.matrix(result.lasso[[i]][,-1]))\n  \n  riskPremium.tmp <- t(replicate) * result.lasso[[i]][,1]\n  apply(riskPremium.tmp, 2, sum)\n}\nrm(i)\nrm(replicate)\nrm(riskPremium.tmp)\n\nts.plot(riskPremium, col=c(\"black\", \"red\", \"yellow\", \"blue\", \"green\"))\nlegend(\"topleft\",c(\"TOPIX\", \"VIX\", \"value_growth\", \"size\", \"JPY_USD\"))\n\nts.plot(riskPremium[,-2], col=c(\"black\", \"red\", \"blue\", \"green\"))\nlegend(\"topleft\",c(\"TOPIX\", \"value_growth\", \"size\", \"JPY_USD\"),\n       col=c(\"black\", \"red\", \"blue\", \"green\"),\n       lwd=2, cex=0.7)\n",
    "created" : 1499915893905.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4270836526",
    "id" : "8B5B5631",
    "lastKnownWriteTime" : 1499917697,
    "last_content_update" : 1499917697,
    "path" : "~/Desktop/GitHub/Bloomberg/R_source.R",
    "project_path" : "R_source.R",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}